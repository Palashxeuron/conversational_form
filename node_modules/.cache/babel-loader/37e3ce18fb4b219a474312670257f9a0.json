{"ast":null,"code":"var _jsxFileName = \"D:\\\\xfinito\\\\React projects\\\\react-conversational-form-example\\\\src\\\\myForm.js\";\nimport React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [{\n      'tag': 'input',\n      'type': 'text',\n      'name': 'firstname',\n      'cf-questions': 'What is your firstname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your lastname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your age?'\n    }, {\n      \"tag\": \"select\",\n      \"cf-input-placeholder\": \"Choose one of the above\",\n      \"multiple\": \"multiple\",\n      \"cf-questions\": \"Gender?\",\n      \"children\": [{\n        \"tag\": \"option\",\n        \"name\": \"option-dropdown-1\",\n        \"cf-label\": \"Male\",\n        \"value\": \"-1\"\n      }, {\n        \"tag\": \"option\",\n        \"name\": \"option-dropdown-2\",\n        \"cf-label\": \"Female\",\n        \"value\": \"0\"\n      }, {\n        \"tag\": \"option\",\n        \"name\": \"option-dropdown-3\",\n        \"cf-label\": \"Other\",\n        \"value\": \"1\"\n      }]\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'Email',\n      'cf-questions': 'Please enter your email so we can get in touch with you'\n    }];\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true // loadExternalStyleSheet: false\n\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref => this.elem = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/xfinito/React projects/react-conversational-form-example/src/myForm.js"],"names":["React","ConversationalForm","MyForm","Component","constructor","props","formFields","submitCallback","bind","componentDidMount","cf","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","render","ref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,CAChB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,WAHV;AAIE,sBAAgB;AAJlB,KADgB,EAOhB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,UAHV;AAIE,sBAAgB;AAJlB,KAPgB,EAahB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,UAHV;AAIE,sBAAgB;AAJlB,KAbgB,EAmBhB;AACE,aAAO,QADT;AAEE,8BAAwB,yBAF1B;AAGE,kBAAY,UAHd;AAIE,sBAAgB,SAJlB;AAKE,kBAAW,CACT;AACE,eAAO,QADT;AAEE,gBAAQ,mBAFV;AAGE,oBAAY,MAHd;AAIE,iBAAS;AAJX,OADS,EAOT;AACE,eAAO,QADT;AAEE,gBAAQ,mBAFV;AAGE,oBAAY,QAHd;AAIE,iBAAS;AAJX,OAPS,EAaT;AACE,eAAO,QADT;AAEE,gBAAQ,mBAFV;AAGE,oBAAY,OAHd;AAIE,iBAAS;AAJX,OAbS;AALb,KAnBgB,EA6ChB;AACE,aAAO,OADT;AAEE,cAAQ,MAFV;AAGE,cAAQ,OAHV;AAIE,sBAAgB;AAJlB,KA7CgB,CAAlB;AAqDA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,EAAL,GAAUT,kBAAkB,CAACU,oBAAnB,CAAwC;AAChDC,MAAAA,OAAO,EAAE;AACPL,QAAAA,cAAc,EAAE,KAAKA,cADd;AAEPM,QAAAA,gBAAgB,EAAE,IAFX,CAGP;;AAHO,OADuC;AAMhDC,MAAAA,IAAI,EAAE,KAAKR;AANqC,KAAxC,CAAV;AAQA,SAAKS,IAAL,CAAUC,WAAV,CAAsB,KAAKN,EAAL,CAAQO,EAA9B;AACD;;AAEDV,EAAAA,cAAc,GAAG;AACf,QAAIW,kBAAkB,GAAG,KAAKR,EAAL,CAAQS,WAAR,CAAoB,IAApB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,kBAA9B;AACA,SAAKR,EAAL,CAAQY,oBAAR,CAA6B,2DAA7B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEC,GAAG,IAAI,KAAKT,IAAL,GAAYS,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AArFiD","sourcesContent":["import React from 'react';\nimport { ConversationalForm } from 'conversational-form';\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'firstname',\n        'cf-questions': 'What is your firstname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your lastname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your age?'\n      },\n      {\n        \"tag\": \"select\",\n        \"cf-input-placeholder\": \"Choose one of the above\",\n        \"multiple\": \"multiple\",\n        \"cf-questions\": \"Gender?\",\n        \"children\":[\n          {\n            \"tag\": \"option\",\n            \"name\": \"option-dropdown-1\",\n            \"cf-label\": \"Male\",\n            \"value\": \"-1\"\n          },\n          {\n            \"tag\": \"option\",\n            \"name\": \"option-dropdown-2\",\n            \"cf-label\": \"Female\",\n            \"value\": \"0\"\n          },\n          {\n            \"tag\": \"option\",\n            \"name\": \"option-dropdown-3\",\n            \"cf-label\": \"Other\",\n            \"value\": \"1\"\n          }\n        ]\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'Email',\n        'cf-questions': 'Please enter your email so we can get in touch with you'\n      },\n    ];\n    \n    this.submitCallback = this.submitCallback.bind(this);\n  }\n  \n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\")\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}